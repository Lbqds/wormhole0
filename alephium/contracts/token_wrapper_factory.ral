TxContract TokenWrapperFactory() {
    pub payable fn createWrapper(
        tokenBridgeId: ByteVec,
        localChainId: U256,
        remoteChainId: U256,
        tokenContractId: ByteVec,
        isLocalToken: Bool,
        tokenDecimals: U256,
        tokenSymbol: ByteVec,
        tokenName: ByteVec,
        payer: Address,
        createContractAlphAmount: U256
    ) -> () {
        let contractCode = #{{ tokenWrapperBinCode }}
        let encodedState = encode!(
            tokenBridgeId,
            callerContractId!(),
            localChainId,
            remoteChainId,
            tokenContractId,
            isLocalToken,
            tokenDecimals,
            tokenSymbol,
            tokenName
        )

        approveAlph!(payer, createContractAlphAmount)
        assert!(remoteChainId != localChainId)
        if (isLocalToken) {
            createContract!(contractCode, encodedState)
        } else {
            let maxAmount = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
            createContractWithToken!(contractCode, encodedState, maxAmount)
        }
    }
}
